{"version":3,"file":"static/js/505.0c44ed72.chunk.js","mappings":"qOAGaA,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,kBACEC,KAAK,OACLC,KAAK,SACLC,SAAU,SAAAC,GAAC,OAAIL,GAASM,EAAAA,EAAAA,GAAaD,EAAEE,cAAcC,Y,8BCT3D,EAAiC,uCAAjC,EAA0F,wCAA1F,EAAoJ,wCAApJ,EAA6M,uCCIvMC,EAAmBC,EAAAA,GAAW,CAClCP,KAAMO,EAAAA,KAAaC,SAAS,0BAC5BC,OAAQF,EAAAA,KAAaC,SAAS,4BAA4BE,YAGtDC,EAAgB,CACpBX,KAAM,GACNS,OAAQ,IAGGG,EAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAM/B,OACE,SAAC,KAAD,CACEF,cAAeA,EACfL,iBAAkBA,EAClBQ,SATa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BH,EAAaE,GACbC,KAIA,UAKE,UAAC,KAAD,CAAMC,UAAWC,EAAjB,WACE,mBAAOC,QAAQ,OAAOF,UAAWC,EAAjC,kBAEE,SAAC,KAAD,CACEE,GAAG,OACHrB,KAAK,OACLC,KAAK,OACLiB,UAAWC,KAEb,SAAC,KAAD,CAAclB,KAAK,aAErB,mBAAOmB,QAAQ,SAASF,UAAWC,EAAnC,oBAEE,SAAC,KAAD,CACEE,GAAG,SACHrB,KAAK,MACLC,KAAK,SACLiB,UAAWC,KAEb,SAAC,KAAD,CAAclB,KAAK,eAErB,mBAAQiB,UAAWC,EAAoBnB,KAAK,SAA5C,+BC/CR,EAAgC,gCAAhC,EAAgF,gCAAhF,EAAgI,gCCEnHsB,EAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACnC,OACE,eAAIN,UAAWC,EAAf,SACGI,EAASE,KAAI,SAAAC,GACZ,IAAQL,EAAqBK,EAArBL,GAAIpB,EAAiByB,EAAjBzB,KAAMS,EAAWgB,EAAXhB,OAClB,OACE,gBAAaQ,UAAWC,EAAxB,UACGlB,EADH,KACWS,GACT,mBACEQ,UAAWC,EACXnB,KAAK,SACL2B,QAAS,WACPH,EAAgBH,IAJpB,sBAFOA,SCEJ,SAASO,IACtB,IAAMC,GAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMR,SAASS,SACpDC,GAAcH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMR,SAASW,UAElDpC,GAAWC,EAAAA,EAAAA,OAEjBoC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,SACR,CAACtC,IAqBJ,OACE,iBAAKoB,UAAU,YAAf,WACE,eAAIA,UAAU,YAAd,wBACA,SAACL,EAAD,CAAgBC,aAtBC,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,KAAMS,EAAa,EAAbA,OAE5B,GADuBmB,EAAcQ,MAAK,SAAAX,GAAO,OAAIA,EAAQzB,OAASA,KAEpE,OAAOqC,MAAM,GAAD,OAAIrC,EAAJ,4BAEdH,GAASyC,EAAAA,EAAAA,IAAW,CAAEtC,KAAMA,EAAMS,OAAQA,SAkBxC,eAAIQ,UAAU,iBAAd,uBACA,SAACrB,EAAD,KACA,SAACyB,EAAD,CACEC,SAlBmB,WACvB,IAAMiB,EAAoBP,EAAYQ,cACtC,OAAOZ,EAAcK,QAAO,SAAAR,GAAO,OACjCA,EAAQzB,KAAKwC,cAAcC,SAASF,MAexBG,GACVnB,gBAZkB,SAAAH,GACtBvB,GAAS8C,EAAAA,EAAAA,IAAcvB","sources":["components/ContactFilter/ContactFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/AddContactForm/AddContactForm.module.css?92ef","components/AddContactForm/AddContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","views/ContactView.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactSlice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__form\":\"AddContactForm_contacts__form__QeUri\",\"contacts__input\":\"AddContactForm_contacts__input__HSjJd\",\"contacts__label\":\"AddContactForm_contacts__label__ORgef\",\"button__submit\":\"AddContactForm_button__submit__b4OjV\"};","// import { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport css from './AddContactForm.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Please write down name'),\n  number: Yup.number().required('Please write down number').integer(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const AddContactForm = ({ onFormSubmit }) => {\n  const onSubmit = (values, { resetForm }) => {\n    onFormSubmit(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form className={css.contacts__form}>\n        <label htmlFor=\"name\" className={css.contacts__label}>\n          Name\n          <Field\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            className={css.contacts__input}\n          />\n          <ErrorMessage name=\"name\" />\n        </label>\n        <label htmlFor=\"number\" className={css.contacts__label}>\n          Number\n          <Field\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            className={css.contacts__input}\n          />\n          <ErrorMessage name=\"number\" />\n        </label>\n        <button className={css.button__submit} type=\"Submit\">\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"Contacts_contact__list__0uhxO\",\"contact__item\":\"Contacts_contact__item__Fzv+w\",\"contacts__btn\":\"Contacts_contacts__btn__eY49E\"};","import css from './Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={css.contact__list}>\n      {contacts.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <li key={id} className={css.contact__item}>\n            {name}: {number}\n            <button\n              className={css.contacts__btn}\n              type=\"button\"\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport {\n  addContact,\n  getContact,\n  deleteContact,\n} from 'redux/contacts/contactOperations';\nimport { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nexport default function ContactView() {\n  const contactsState = useSelector(state => state.contacts.items);\n  const filterState = useSelector(state => state.contacts.filter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContact());\n  }, [dispatch]);\n\n  const onFormSubmit = ({ name, number }) => {\n    const isAddedContact = contactsState.find(contact => contact.name === name);\n    if (isAddedContact) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name: name, number: number }));\n  };\n\n  const filteredContacts = () => {\n    const filterToLowerCase = filterState.toLowerCase();\n    return contactsState.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mainTitle\">Phonebook</h1>\n      <AddContactForm onFormSubmit={onFormSubmit} />\n      <h2 className=\"secondaryTitle\">Contacts</h2>\n      <ContactFilter />\n      <Contacts\n        contacts={filteredContacts()}\n        onDeleteContact={onDeleteContact}\n      />\n    </div>\n  );\n}\n"],"names":["ContactFilter","dispatch","useDispatch","type","name","onChange","e","changeFilter","currentTarget","value","validationSchema","Yup","required","number","integer","initialValues","AddContactForm","onFormSubmit","onSubmit","values","resetForm","className","css","htmlFor","id","Contacts","contacts","onDeleteContact","map","contact","onClick","ContactView","contactsState","useSelector","state","items","filterState","filter","useEffect","getContact","find","alert","addContact","filterToLowerCase","toLowerCase","includes","filteredContacts","deleteContact"],"sourceRoot":""}