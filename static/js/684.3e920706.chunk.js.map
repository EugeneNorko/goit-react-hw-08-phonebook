{"version":3,"file":"static/js/684.3e920706.chunk.js","mappings":"wPAKMA,EAAS,CACbC,UAAW,CACTC,OAAQ,SACRC,QAAS,YACTC,SAAU,UAEZC,MAAO,CACLC,QAAS,QACTC,aAAc,QAEhBC,MAAO,CACLF,QAAS,QACTG,MAAO,SAETC,OAAQ,CACNJ,QAAS,QACTK,gBAAiB,qBACjBC,MAAO,QACPC,OAAQ,4BACRC,aAAc,MACdC,SAAU,OACVC,OAAQ,OACRC,OAAQ,YAIG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,iBAAKC,MAAO/B,EAAOC,UAAnB,WACE,SAAC,IAAD,WACE,oDAEF,kBAAM+B,SAbW,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,EAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAQV,WACE,mBAAOI,MAAO/B,EAAOK,MAArB,kBAEE,kBACE0B,MAAO/B,EAAOQ,MACd4B,KAAK,OACLd,KAAK,OACLQ,MAAOR,EACPe,SAAUT,QAGd,mBAAOG,MAAO/B,EAAOK,MAArB,mBAEE,kBACE0B,MAAO/B,EAAOQ,MACd4B,KAAK,QACLd,KAAK,QACLQ,MAAON,EACPa,SAAUT,QAGd,mBAAOG,MAAO/B,EAAOK,MAArB,sBAEE,kBACE0B,MAAO/B,EAAOQ,MACd4B,KAAK,WACLd,KAAK,WACLQ,MAAOJ,EACPW,SAAUT,QAGd,mBAAQG,MAAO/B,EAAOU,OAAQ0B,KAAK,SAAnC","sources":["views/RegisterView.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useState } from 'react';\nimport authOperations from '../redux/auth/AuthOperations';\n\nconst styles = {\n  Container: {\n    margin: '0 auto',\n    padding: '50px 25px',\n    maxWidth: '1200px',\n  },\n  Field: {\n    display: 'block',\n    marginBottom: '20px',\n  },\n  Input: {\n    display: 'block',\n    width: '300px',\n  },\n  Button: {\n    display: 'block',\n    backgroundColor: 'rgb(152, 187, 242)',\n    color: 'black',\n    border: '1px solid rgb(22, 24, 82)',\n    borderRadius: '4px',\n    minWidth: '80px',\n    height: '30px',\n    cursor: 'pointer',\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div style={styles.Container}>\n      <Helmet>\n        <title>Registration page</title>\n      </Helmet>\n      <form onSubmit={handleSubmit}>\n        <label style={styles.Field}>\n          Name\n          <input\n            style={styles.Input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label style={styles.Field}>\n          Email\n          <input\n            style={styles.Input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label style={styles.Field}>\n          Password\n          <input\n            style={styles.Input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button style={styles.Button} type=\"Submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["styles","Container","margin","padding","maxWidth","Field","display","marginBottom","Input","width","Button","backgroundColor","color","border","borderRadius","minWidth","height","cursor","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","style","onSubmit","e","preventDefault","authOperations","type","onChange"],"sourceRoot":""}